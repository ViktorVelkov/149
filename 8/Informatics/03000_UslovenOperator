1. Учебен предмет-вид подготовка: Информатика - нови знания  
1.1 Учебник: Информатика за 8 клас. Общообразователна подготовка. Автори: Красимир Манев, Нели Манева, Велислава Христова. Издателство Изкуства 
Допълнително използван материал: 
2. Клас: 8 
3. Тема на урока: 30 
4. Вид на урока: 
5. Времетраене: 40
6. Дата на провеждане: 1 Март 2023
7. Цели на урока: 
8. Използвани методи: 
	- мотивация за „активно практическо учене“;
	- учене чрез изследване;
	- учене чрез преживяване;
	- учене чрез разработване на проекти, изработени в група;
	- учене чрез практика;
	- учене чрез ситуационен метод;
9. Дидактически средства в урока: мултимедия, среда за програмиране VisualStudio, онлайн компилатор, критерий за оценка
10. Очаквани резултати(на ниво УП и урочна единица): 
	- активно участие от няколко ученика и активно пречене в часа от други
	- повишаване на общите знания и компютърната грамотност
	- подобравяне на микроклимата сред учениците в клас
	- да добият осмокласниците увереност от умелото демонстриране на знания и умения свързани с програмирането
	и използването на условни заявки
11. Нови понятия: 

---- 
Структура на урока 
1. Организация в началото на часа - 1 минута
2. Уводна част на урока - 10 минути
3. Същинска част на урока - 20-25 минути 
4. Заключителна част на урока - 2-4 минути 
5. Оценка на урока и поставяне на оценки на учениците - 1 минута


Въведение: 

започнахме раздела за програмиране на разклонени и циклични алгоритми с урок за булевия тип данни. Кой
може да ми каже какво представлява този тип данни? Булевите данни използват сравнения и знакове за сравнения, когато
стойността им не е пряко дефинирана като true или false. Кои са тези сравнения? (==, >,<,>=,<=, !=) като тези сравнения сравняват не само числови стойности, възможно е и сравняването на елементи, char, където стойностите се взимат директно от таблицата Unicode. Освен това имаме и логически операции, използваме ги, защото често се налага да комбинираме няколко аритметични сравнения едновременно. Кои са тези логически операции? (&&, ||, !) 
Комбинацията между логическите операции и логическите сравнения можем да наричаме логически изрази. Условният оператор, който ще разгледаме днес използва логически изрази. 
( --- 5 до 10 минути --- ) 
Основна част: 

1. Условието if
След като си припомнихме как можем да сравняваме изрази, нека преминем към условните конструкции, които ни позволяват да имплементираме програмна логика.
Условните конструкции if и if-else представляват тип условен контрол, чрез който програмата може да се държи различно, в зависимост от някакво условие, което се проверява по време на изпълнение на конструкцията.
Основният формат на условната конструкция if е следният: (***показване на конструкцията в Ноутпад++ ***)
Булевият израз може да бъде променлива от булев тип или булев логически израз. Булевият израз не може да бъде цяло число (за разлика от други езици за програмиране като C и C++). Тялото на конструкцията е онази част, заключена между големите къдрави скоби {}. То може да се състои от една или няколко операции (statements). Когато се състои от няколко операции, говорим за съставен блоков оператор, т.е. поредица от команди, следващи една след друга,
заградени във фигурни скоби. Изразът в скобите след ключовата дума if трябва да бива изчислен до
булева стойност true или false. Ако изразът бъде изчислен до стойност true, тогава се изпълнява тялото на условната конструкция. Ако резултатът от изчислението на булевия израз е false, то операторите в тялото няма да
бъдат изпълнени.
(*** показване на пример с подаване на числа от конзолата и сравняването им ***) 
//

		Console.WriteLine("Enter two numbers.");
		Console.Write("Enter first number: ");
		int firstNumber = int.Parse(Console.ReadLine());
		Console.Write("Enter second number: ");
		int secondNumber = int.Parse(Console.ReadLine());
		int biggerNumber = firstNumber;
		if (secondNumber > firstNumber)
		{
			biggerNumber = secondNumber;
		}
		Console.WriteLine("The bigger number is: {0}", biggerNumber);
 
//
(--- до 10 мин ---)
Задача: Намерете най-малкото сред три подадени от конзолата числа. 
(--- до 10 мин ---)
Добра практика е винаги да слагаме къдрави скоби за тялото на условните блокове. 
Съществува и условната конструкция if else. Tя има следната структура: 
(*** показване в Ноутпад++ ***)
		if (булев израз)
		{
		тяло на условната конструкция;
		}
		else
		{
		тяло на else-конструкция;
		}
Пример: 
		int x = 2;
		if (x > 3)
		{
		Console.WriteLine("x is greater than 3");
		}
		else
		{
		Console.WriteLine("x is not greater than 3");
		}
(--- 2 минути ---)
2. Контроли RadioButton и CheckBox
В C# иама комппонента RadioButton, която познаваме от използваните приложни програми. Радио бутоните винаги са по няколко в група, като само един от тях е избран(има точка в него). Казваме, бутона е активен или неактивен. Радиобутона има много свойства, но очевидно това, което показва дали е активен или не е най-важно. То се нарича параметър Checked. Друго свойство/параметър на бутона се нарича Text. 
(*** показване в Ноутпад++ ***) 
		if(RadioButton.Checked){ <operatori> }
(--- 2 минути ---)
Задача: Решаване на задача 2 от учебника, страница 86-87
(продължава в следващия час) 


Обобщение: 
Припомнихме си логическите сравнения, операции и изрази. Споменахме, че условните конструкции използват логически изрази, за да добавят логика и разклонения в нашия код. Разгледахме видовете условни конструкции, в частност 
if условието и if-else условието. Разгледахме и една кратка програма за сравняване на две числа. 


 
